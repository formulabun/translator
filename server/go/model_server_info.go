/*
 * Translator service between a srb2kart server and json
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ServerInfo struct {

	PacketVersion uint8 `json:"PacketVersion,omitempty"`

	Application string `json:"Application,omitempty"`

	Version uint8 `json:"Version,omitempty"`

	SubVersion uint8 `json:"SubVersion,omitempty"`

	NumberOfPlayer uint8 `json:"NumberOfPlayer,omitempty"`

	MaxPlayers uint8 `json:"MaxPlayers,omitempty"`

	GameType uint8 `json:"GameType,omitempty"`

	ModifiedGame bool `json:"ModifiedGame,omitempty"`

	CheatsEnabled bool `json:"CheatsEnabled,omitempty"`

	KartVars uint8 `json:"KartVars,omitempty"`

	FileNeededNum uint8 `json:"FileNeededNum,omitempty"`

	Time uint32 `json:"Time,omitempty"`

	LevelTime uint32 `json:"LevelTime,omitempty"`

	ServerNameRaw string `json:"ServerNameRaw,omitempty"`

	MapName string `json:"MapName,omitempty"`

	MapTitle string `json:"MapTitle,omitempty"`

	MapMD5 [16]byte `json:"MapMD5,omitempty"`

	ActNum uint8 `json:"ActNum,omitempty"`

	IsZone bool `json:"IsZone,omitempty"`

	HttpSource string `json:"HttpSource,omitempty"`

	FileNeeded []FileNeededInner `json:"FileNeeded,omitempty"`
}

// AssertServerInfoRequired checks if the required fields are not zero-ed
func AssertServerInfoRequired(obj ServerInfo) error {
	for _, el := range obj.FileNeeded {
		if err := AssertFileNeededInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseServerInfoRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ServerInfo (e.g. [][]ServerInfo), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseServerInfoRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aServerInfo, ok := obj.(ServerInfo)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertServerInfoRequired(aServerInfo)
	})
}
