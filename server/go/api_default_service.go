/*
 * Translator service between a srb2kart server and json
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"

	"go.formulabun.club/srb2kart/network"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
	Target string
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService(target string) DefaultApiServicer {
	return &DefaultApiService{target}
}

// MapsGet - get the installed mods
func (s *DefaultApiService) FilesGet(ctx context.Context) (ImplResponse, error) {
  files, err := network.TellAllFilesNeeded(s.Target)
  if err != nil {
    return Response(500, nil), err
  }

  for i, f := range files {
    // oops I forgot null terminator in srb2kart/network
    files[i] = f[:len(f)-2]
  }
	return Response(http.StatusOK, files), nil
}

// PlayerinfoGet - get the player infomation
func (s *DefaultApiService) PlayerinfoGet(ctx context.Context) (ImplResponse, error) {
	_, playerInfo, err := network.AskInfo(s.Target)

	if err != nil {
		return Response(500, nil), err
	}

	return Response(http.StatusOK, playerInfo), nil
}

// ServerinfoGet - get the server information
func (s *DefaultApiService) ServerinfoGet(ctx context.Context) (ImplResponse, error) {
	serverInfo, _, err := network.GetServerInfo(s.Target)

	if err != nil {
		return Response(500, nil), err
	}

	return Response(http.StatusOK, serverInfo), nil

}
